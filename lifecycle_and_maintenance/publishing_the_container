Publishing the Container

We know how to access our container through some docker commands, but what if we want to share our container with the greater world? Docker provides us with the option to publish our container to a port on our host, letting us share or otherwise test our applications and services.

Before we start, however, let's make sure we have something we can actually check and create an index page for our web server.

vim index.html
Hello, World!
Save and exit the file, then push it to the container.

docker cp index.html web01:/var/www/
Start nginx.

docker exec -dt web01 nginx -g 'pid /tmp/nginx.pid; daemon off;'
Now let's see if this works. Right now, our container can only be accessed from our host. Specifically there's a private network we can use to access the host. So to see if our web configuration is working, we can curl the container's private IP. But first, we need to locate the private IP. We can find this with docker inspect.

docker inspect web01
This outputs a variety of information about our container, including container state, overall configuration, and networking. Look for the IPAddress value, then use curl to see if everything is working.

curl <IPAddress>
Our web container is working! But we've now encountered a problem: we can't publish an existing container to a port on our host, at least not through Docker. Instead, we'll need to work with a copy of this container.

First, we'll need to create an image based on our container. We can do this with a:

docker commit web01 web-base
We can then deploy our container with docker run. Only this time, we specifically want to use the --port or -p flag, to map the host port to the container.

docker run -p 80:80 -dt --name web02 web-base
We may also need to restart nginx.

docker exec -dt web02 nginx -g 'pid /tmp/nginx.pid; daemon off;'
We can now navigate to the public IP of our localhost and see our index.html file.

Wrap-Up
docker inspect <container>: View container information
docker commit <container> <image-name>: Create an image of an existing container
docker run -p <host_port>:<container_port> <container>: Publish to host port

